<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>图片管理</title>
    <url>/2019/10/23/blog/%E5%9B%BE%E7%89%87%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p><img src="/.com//%E5%A6%B9%E5%AD%90.png" alt="meizi"><br>真香！！</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>水</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown语法</title>
    <url>/2019/10/23/blog/MarkDown%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><ul>
<li>使用#号进行标记标题级别<pre><code># 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题</code></pre></li>
</ul>
<h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><blockquote>
<p>每行末尾空两格再回车</p>
</blockquote>
<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><pre><code>*斜体文本*
_斜体文本_
**粗体文本**
__粗体文本__
***粗斜体文本***
___粗斜体文本___</code></pre><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><blockquote>
<p>在一行中用三个以上的星号、减号、底线来建立一个分隔线。</p>
</blockquote>
<hr>
<p>————如这样————</p>
<hr>
<h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><blockquote>
<p>再文字的两端加上两个波浪线</p>
</blockquote>
<p><del>阿瓦达</del><br>​<code>~~啊瓦达~~</code></p>
<h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><blockquote>
<p>可以通过HTML的​<code>&lt;u&gt;​</code>标签来实现</p>
</blockquote>
<pre><code>&lt;u&gt;带下划线的内容&lt;/u&gt;</code></pre><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><blockquote>
<p>MarkDown 支持有序列表 和 无序列表</p>
</blockquote>
<h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><blockquote>
<p>无序列表使用星号(*****)、加号(+)或是减号(-)作为列表标记</p>
</blockquote>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><blockquote>
<p>有序列表使用数字并加上 . 号空格来表示</p>
</blockquote>
<h2 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h2><blockquote>
<p>列表嵌套只需在子列表中的选项添加四个空格即可</p>
</blockquote>
<pre><code>1.parent1
    +p1-child1
    +p1-child2
2.parent2
    -p2-child1
    -p2-child2</code></pre><h1 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h1><blockquote>
<p>在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号<br>区块是可以嵌套的</p>
</blockquote>
<pre><code>&gt; MarkDown

&gt;&gt; MarkDown</code></pre><p>区块于列表结合</p>
<blockquote>
<p>1.区块中使用列表<br>2.列表中使用区块</p>
</blockquote>
<pre><code>&gt; 区块中使用列表
&gt; 1. 有序
&gt; + 无序
&gt; 2. 有序
&gt; - 无序

1. 列表中使用区块
    &gt; 区块内容
    &gt;&gt; 区块内容
2. 列表中使用区块</code></pre><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><pre><code>[链接名称](链接地址)
或者
&lt;链接地址&gt;

// 例：
[百度](www.baidu.com)
&lt;www.baidu.com&gt;</code></pre><h2 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h2><blockquote>
<p>链接也可以用变量来代替，文档末尾附带变量地址</p>
</blockquote>
<pre><code>百度[百度][1]
教育宝[教育宝][jyb]

[1]:www.baidu.con
[jyb]:https://www.jiaoyubao.cn/</code></pre><p><a href="www.baidu.con">百度</a></p>
<h1 id="引用本地图片"><a href="#引用本地图片" class="headerlink" title="引用本地图片"></a>引用本地图片</h1><blockquote>
<p>在hexo中把图片放在与博客同名的文件夹中，然后只用 <code>![图片描述](图片文件名)</code>就可以引用了。</p>
</blockquote>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>数论</title>
    <url>/2019/10/23/blog/%E6%95%B0%E8%AE%BA/</url>
    <content><![CDATA[<h1 id="中国剩余定理"><a href="#中国剩余定理" class="headerlink" title="中国剩余定理"></a>中国剩余定理</h1><p><a href="https://www.luogu.org/problem/P1495" target="_blank" rel="noopener">相关题面</a></p>
<h2 id="标程"><a href="#标程" class="headerlink" title="标程"></a>标程</h2><pre><code>int intchina(int r)
{
int Mi,x,y,d,ans=0;M=1;
for(int i=1;i&lt;=r;i++) M*=m[i];
for(int i=1;i&lt;=r;i++){
    M[i]=M/m[i];
    exgcd(Mi,m[i],d,x,y);
    ans=(ans+Mi*x*a[i])%M;
}
return (ans+M)%M; //正解
}</code></pre><h1 id="扩展欧几里得"><a href="#扩展欧几里得" class="headerlink" title="扩展欧几里得"></a>扩展欧几里得</h1><p><a href="https://www.luogu.org/problem/P1516" target="_blank" rel="noopener">相关题面</a></p>
<h2 id="标程-1"><a href="#标程-1" class="headerlink" title="标程"></a>标程</h2><pre><code>ll exgcd(ll a,ll b,ll &amp;x1, ll &amp;y1)
{
    if(!b)
    {
        x1=1;
        y1=0;
        return a;
    }
    ans=exgcd(b,a%b,x1,y1);
    ll t=x1;  //交换逆向求解
    x1=y1;
    y1=t-a/b*y1;
    return ans;
}</code></pre><ol>
<li>xa/d-yb/d=A/d这个方程就是扩展欧几里得exgcd(a,b,x,y)（忽略y前的负号），这样可以解出x，此时的x不是最优解，还要转换，即((x*(A/d))%(b/d)+(b/d))%(b/d)【求最小解的式子，不理解先背下来】。d是模。</li>
<li>当x不是最小正数解时，写成 x = (x % b + b) % b;循环至为正；</li>
</ol>
<h1 id="费马小定理"><a href="#费马小定理" class="headerlink" title="费马小定理"></a>费马小定理</h1><blockquote>
<p>————未学待补————</p>
</blockquote>
<hr>
<h1 id="二次剩余CipollaCipolla"><a href="#二次剩余CipollaCipolla" class="headerlink" title="二次剩余CipollaCipolla"></a>二次剩余CipollaCipolla</h1><p><a href="https://www.cnblogs.com/bztMinamoto/p/10664973.html" target="_blank" rel="noopener">学习资料1</a><br><a href="https://www.luogu.org/blog/oieremtkotori/2-0v0" target="_blank" rel="noopener">学习资料2</a></p>
<blockquote>
<p>————未学待补————</p>
</blockquote>
]]></content>
      <categories>
        <category>数论</category>
      </categories>
      <tags>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>伟大尝试</title>
    <url>/2019/10/23/%E4%BC%9F%E5%A4%A7%E5%B0%9D%E8%AF%95/</url>
    <content><![CDATA[<blockquote>
<p>开始新的篇章<br>欢迎来到我的世界</p>
</blockquote>
<h1 id="阿瓦达"><a href="#阿瓦达" class="headerlink" title="阿瓦达"></a>阿瓦达</h1><h2 id="瓦大的有读"><a href="#瓦大的有读" class="headerlink" title="瓦大的有读"></a><em>瓦大的有读</em></h2><hr>
<h2 id="沃兹"><a href="#沃兹" class="headerlink" title="沃兹"></a><u>沃兹</u></h2><ol>
<li>awdawd</li>
<li>12321</li>
</ol>
<hr>
<ul>
<li>awdaw<blockquote>
<p>adawd</p>
<blockquote>
<p>awdawdwad</p>
<blockquote>
<p>awdawd</p>
<blockquote>
<p>dawdwadaw</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</li>
</ul>
<blockquote>
<p>区块中使用列表</p>
<ol>
<li>有序</li>
</ol>
<ul>
<li>无序</li>
</ul>
<ol start="2">
<li>有序</li>
</ol>
<ul>
<li>无序</li>
</ul>
</blockquote>
<ol>
<li>列表中使用区块<blockquote>
<p>区块内容</p>
<blockquote>
<p>区块内容</p>
</blockquote>
</blockquote>
</li>
<li>列表中使用区块</li>
</ol>
<p><a href="www.baidu.com">百度</a><br>| awdaw | 啊达瓦 |</p>
<p><del>ad</del></p>
]]></content>
      <categories>
        <category>废话</category>
      </categories>
      <tags>
        <tag>废话</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC注意事项</title>
    <url>/2019/10/22/JDBC%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    <content><![CDATA[<p>##JDBC<br>下载对应的数据库的jar<br>如mysql数据库 地址：D:\BaiduNetdiskDownload2\08.JDBC(共30集)\源码笔记\code&amp;资料\mysql-connector-java-5.1.7<br>提取里面的 <strong>mysql-connector-java-5.1.7-bin.jar</strong>文件即可  </p>
<blockquote>
<p>#对于jar的放置  </p>
</blockquote>
<ol>
<li>在项目根目录下创建一个lib文件夹把jar放进去  </li>
<li>右键jar文件丢出Path（build Path）  </li>
</ol>
<p>##jdbc文档<br>地址：所下驱动的docs文件夹下<br>刚开始比较难看懂，但要多看，养成习惯  </p>
<p>##流程  </p>
<ol>
<li>注册驱动 DriverManager(在版本升级之后就不用写了自动帮你注册)如果有多个jar的时候，为安全以防万一，还是写一下；  </li>
<li>通过getConnection函数建立连接 协议数据库 用户 密码 </li>
<li>创建Statement对象通过连接对象create出来</li>
<li>通过Statement对象的executeQuery函数执行命令，得的结果集（类型 ResultSet）  </li>
<li>逆向释放资源 close    </li>
</ol>
<p>##释放资源<br>  一般写在try catch 后面的finally里面。这样的话这些要释放资源的对象就需要在try外面申明一下。<br>  除此之外，释放资源的时候也要<strong>判断对象是否为空</strong>。<br>  我们可以建立一个<strong>JDBC的工具类</strong>，把他们的封装成一个函数release分别释放各个对象资源    </p>
<p>##JDBC优化  </p>
<blockquote>
<p>如注册驱动为防止注册两次，Class.forName（加载类的地址）；<br> 里面含静态代码块。还有就是为了<strong>抓异常</strong>我们就把catch的参数改为Exception。    </p>
</blockquote>
<p>###properties配置文件<br>  意义：未来配置的时候，方便改写；如密码数据库等<br>  位置：在src目录下直接建立一个properties文件；<strong>因为</strong>到时候可以通过<strong>类加载器找到文件</strong>；在sec下的文件会被放到该目录下的bin目录下，而类加载器会加载这个bin目录的所以文件。   </p>
<p>####使用步骤方法<br>  写在你所写工具类里的<strong>静态代码块</strong>里面，随你的工具类的加载而加载  </p>
<ol>
<li>创建properties对象  </li>
<li>找到配置文件然后把它转化成流（InputStream）<br>JDBCUtill.class.getClassLoader().getResourceAsStream(“jdbc.properties”);<br>当前类.class.加载器.转化成流(文件名)；<br><strong>properties文件也可以放在工程目录下面</strong>，通过new FileInputStream(文件名)获得流;</li>
</ol>
<p>##DAO模式<br>###概念<br> 在src目录下创建几个包，test包，dao包（写一些抽象类），dao.impl包(实现dao里的方法)<br> 每个一一对应如dao包下的<strong>UserDao</strong>对应dao.impl包里面的<strong>UserDaoImpl</strong>等<br>  一般实现impl里的方法我们可以以夫类（抽象）对象应用子类（实现类），然后引用他的方法</p>
<h2 id="PrepareStatement"><a href="#PrepareStatement" class="headerlink" title="PrepareStatement"></a>PrepareStatement</h2><blockquote>
<p>该对象就是替换前面的statement对象。  </p>
</blockquote>
<p>格式：ps = conn.prepareStatement(sql);<br>先传sql语句，可以进行检查语句语法是否错误的功能。<br>传的sql语句还是带有问号“？”的，可以用setString/int（ index，value）进行传参，<strong>注意索引第一个是1</strong>。</p>
<p>##小技巧  </p>
<ul>
<li>如果返回的东西有异常时，可以把它赋值给别人然后去抓异常然后return  </li>
<li>打印异常：e.printStackTrace();    </li>
<li>一个方法尽量就做一个具体的事    </li>
<li><strong>在一段字符串中插入变量</strong>，如user,字符串：“我的user是XX”可以用单引中加双引在加两个加号变量放中间；“我的‘“+user+”’是XX”；</li>
</ul>
<p>##@test<br>一般你不能@test的功能的，需要右键目录点击Build Path中的add lib<br>然后选择JUnit 选择JUnit 4就可以了；    </p>
]]></content>
  </entry>
</search>
